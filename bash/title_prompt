__git_ps1 () {
    local g="$(git rev-parse --git-dir 2>/dev/null)"
    if [ -n "$g" ]; then
        local r
        local b
        if [ -d "$g/../.dotest" ]; then
            r="|AM/REBASE"
            b="$(git symbolic-ref HEAD 2>/dev/null)"
        elif [ -f "$g/.dotest-merge/interactive" ]; then
            r="|REBASE-i"
            b="$(cat $g/.dotest-merge/head-name)"
        elif [ -d "$g/.dotest-merge" ]; then
            r="|REBASE-m"
            b="$(cat $g/.dotest-merge/head-name)"
        elif [ -f "$g/MERGE_HEAD" ]; then
            r="|MERGING"
            b="$(git symbolic-ref HEAD 2>/dev/null)"
        else
            if [ -f $g/BISECT_LOG ]; then
                r="|BISECTING"
            fi
            if ! b="$(git symbolic-ref HEAD 2>/dev/null)"; then
                b="$(cut -c1-7 $g/HEAD)..."
            fi
        fi

        if [ -n "$1" ]; then
            printf "$1" "${b##refs/heads/}$r"
        else
            printf " (%s)" "${b##refs/heads/}$r"
        fi
    fi
}

function do_prompt ()
{
    if [ $? -ne 0 ] ; then
        local ERROR_PROMPT="\[\033[01;31m\]"
    fi

    local BASE
    if [ $UID -ne 0 ] ; then
        BASE="$"
    else
        BASE="#"
    fi

    local TITLEBAR
    case $TERM in
       xterm*|*rxvt*|cygwin|interix|Eterm|mlterm|kterm|aterm|putty*)
            if [ "${STY}" ] ; then
                TITLEBAR='\[\033k\u@\h:\w\033\134\]'
            else
                TITLEBAR='\[\033]1;\u@\h:\w\007\033]2;\u@\h:\w\007\]'
            fi
        ;;
        screen*)
            TITLEBAR='\[\033k\u@\h:\w\033\134\]'
        ;;
        *)
            TITLEBAR=''
        ;;
    esac
    PS1="${TITLEBAR}\[\033[1;33m\]\u\[\033[0;39m\]@\[\033[01;32m\]\h \[\033[01;34m\]\w $(__git_ps1 "\[\033[1;36m\](%s)\[\033[1;34m\] ")${ERROR_PROMPT}${BASE} \[\033[00m\]"
    export PS1
}

PROMPT_COMMAND=do_prompt
